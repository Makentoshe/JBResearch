<resources>
    <string name="app_name">JBResearch</string>
    <string-array name="languages">
        <item>Kotlin</item>
        <item>Java</item>
        <item>C++</item>
        <item>Go</item>
        <item>C#</item>
    </string-array>

    <string name="kotlin_description">
        Kotlin is a statically typed programming language that runs on the Java virtual machine and
        also can be compiled to JavaScript source code or use the LLVM compiler infrastructure.
        Its primary development is from a team of JetBrains programmers based in
        Saint Petersburg, Russia. While the syntax is not compatible with Java, the JVM
        implementation of the Kotlin standard library is designed to interoperate with Java code and
        is reliant on Java code from the existing Java Class Library, such as the collections
        framework. Kotlin uses aggressive type inference to determine the type of values and
        expressions for which type has been left unstated. This reduces language verbosity relative
        to Java, which demands often entirely redundant type specifications prior to version 10.
    </string>

    <string name="java_description">
        Java is a general-purpose computer-programming language that is concurrent, class-based,
        object-oriented, and specifically designed to have as few implementation dependencies as
        possible. It is intended to let application developers "write once, run anywhere", meaning
        that compiled Java code can run on all platforms that support Java without the need for
        recompilation. Java applications are typically compiled to bytecode that can run on any Java
        virtual machine (JVM) regardless of computer architecture.
    </string>

    <string name="cpp_description">
        C++ is a general-purpose programming language. It has imperative, object-oriented and
        generic programming features, while also providing facilities for low-level memory
        manipulation. It was designed with a bias toward system programming and embedded,
        resource-constrained and large systems, with performance, efficiency and flexibility of use
        as its design highlights. C++ has also been found useful in many other contexts,
        with key strengths being software infrastructure and resource-constrained applications,
        including desktop applications, servers (e.g. e-commerce, Web search or SQL servers), and
        performance-critical applications (e.g. telephone switches or space probes). C++ is a
        compiled language, with implementations of it available on many platforms.
    </string>

    <string name="csharp_description">
        C# is a general-purpose, multi-paradigm programming language encompassing strong typing,
        imperative, declarative, functional, generic, object-oriented (class-based), and
        component-oriented programming disciplines. It was developed around 2000 by Microsoft within
        its .NET initiative and later approved as a standard by Ecma (ECMA-334) and
        ISO (ISO/IEC 23270:2006). C# is one of the programming languages designed for the
        Common Language Infrastructure.
    </string>

    <string name="go_description">
        Go is a programming language designed by Google engineers Robert Griesemer, Rob Pike, and
        Ken Thompson. Go is a statically typed, compiled language in the tradition of C, with the
        added benefits of memory safety, garbage collection, structural typing, and CSP-style
        concurrency. The compiler, tools, and source code are all free and open source.
    </string>
</resources>
